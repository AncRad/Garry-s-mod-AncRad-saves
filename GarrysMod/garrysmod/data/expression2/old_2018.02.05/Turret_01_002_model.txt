@name Turret_01_002_model

@inputs 
@outputs 
@persist [DATA]:table DrosselH



#include "AddHolo"



if(changed(0)) {
    function addHoloBone(Name:string, Pos:vector, Ang:angle, INTO:string) {
        addHolo(Name,Pos,vec(),Ang,vec(),"cube","",INTO)
        AddHolo[Name + "/offset/pos", vector] = Pos
    }
    function addHoloBone(Name:string, [Pos Size]:vector, Ang:angle, Color:vector, [Model Material INTO]:string) {
        addHolo(Name,Pos,Size,Ang,Color,Model,Material,INTO)
        AddHolo[Name + "/offset/pos", vector] = Pos
    }
    function number smooth(Value:number) {
        return 0.5-sin(90 + clamp(Value,0,1) * 180)/2
    }
    function number smooth([Value IN TO]:number) {
        local Min = (IN < TO ? IN : TO)
        local Max = (TO > IN ? TO : IN)
        Value = clamp(Value,Min,Max)
        Value = clamp((Value-Min)/(Max-Min),0,1)
        return 0.5-sin(90 + Value * 180)/2
    }
    
    
    ##############
    #            #
    #- constants #
    #            #
    ##############
    ################
    #
    #- scales
    T_Scale = 1
    T_Height = 1 *T_Scale
    T_Radius = 6 *T_Scale
    #
    #- colormater
    local Color1 = vec(130)
    local Mater1 = ""
    #
    ################
    
    ################
    #
    #- nijnya chast
    #
    #- tolshina dna nijnih bortov
    local Dno_h = T_Height*0.05
    #
    #- shirina razreza nijnih bortov
    local Clip = T_Height
    #
    ####
    #
    #- lapki
    #
    #- shirini sekcii
    local Height0 = T_Height+Dno_h*1.5
    local Height1 = Height0*0.89
    local Height2 = Height1*0.89
    local Height3 = Height2*0.85
    local Height4 = Height3*0.75
    #
    #- dlini sekcii
    local Radius0 = T_Radius/2 * sin(acos(Clip/T_Radius))*0.995
    local Radius4 = Radius0*1.0-Height4/2
    local Radius3 = Radius4*1.0+Height4/4
    local Radius2 = Radius3*0.95
    local Radius1 = Radius0
    #
    #- glavnaya os vrasheniya lapki
    local DrosselR = Height1*2
     DrosselH = Height1 #Height1-AxisR
    #
    #-
    array(Radius0,Radius1,Radius2,Radius3,Radius4,DrosselH)
    #
    ################
    
    
    addHolo("rt"  ,vec(0,0,5),vec(),ang(),vec(),"cube","",  "") addHoloINTO(entity())
    addHolo("base",vec(     ),vec(),ang(),vec(),"cube","","rt")
    
    
    
    ################
    #
    #- Verh i niz nijnego borta
    #
    addHolo("",vec(0,0,(-Dno_h-T_Height)),vec(T_Radius,T_Radius,Dno_h),ang(),Color1,"hq_cylinder",Mater1,"base")
    addHolo("",vec(0,0,(+Dno_h+T_Height)),vec(T_Radius,T_Radius,Dno_h),ang(),Color1,"hq_cylinder",Mater1,"base")
    #
    ################
    
    
    for(Lapka_i = 1,3) {
        
        local LapaRT0   = "lapaRT0"   + Lapka_i
        local LapaRT1   = "lapaRT1"   + Lapka_i
        local LapaRT2   = "lapaRT2"   + Lapka_i
        local LapaRT3   = "lapaRT3"   + Lapka_i
        local LapaRT4   = "lapaRT4"   + Lapka_i
        local Fingertip = "fingertip" + Lapka_i
        local Drossel   = "drossel"   + Lapka_i
        
        local F = Lapka_i - 1
        local A = 120 * F
        
        ################
        #
        #- Nijniy bort
        #
        addHolo("", vec(),vec(T_Radius,T_Radius,T_Height),ang(),Color1, "hq_tube_thin", Mater1, "base")
        addHolo_clip(vec(),ang(0,A+30,0),Clip)
        addHolo_clip(vec(),ang(0,A+90,0),Clip)
        local Rad = T_Radius-T_Radius/6*0.02
        addHolo("dverka" + Lapka_i, vec(),vec(Rad,Rad,T_Height+Dno_h),ang(),Color1*1.5, "hq_tube_thin", Mater1, "base")
        addHolo_clip(vec(),ang(0,A+90,0),-Clip*1.1)
        addHolo_clip(vec(),ang(0,A-90,0),-Clip*1.1)
        addHolo_clip(vec(),ang(0,A,0),Rad*0.95)
        #
        ################
        
        XX = 0
        ################
        #
        #- LAPKI
        #
        #- LapaRT0
        addHoloBone(LapaRT0,vec(0,0,0),vec(Height0,Height0,Radius0*2),ang(90,A,0),Color1,"hq_stube_thin",Mater1,"base") #addHoloClip(vec(),ang(0,45,0),-0.8)
        addHolo_clip(vec(),ang(-90,0,0),0)
        #
        #- LapaRT1
        addHoloBone(LapaRT1,vec(DrosselH,0,Radius0-Radius1+XX)           ,ang()                              ,LapaRT0)
        addHolo("",vec(-DrosselH,0, Radius1),vec(Height1,Height1,Radius1),ang(),Color1,"hq_stube_thin",Mater1,LapaRT1)
        local BoxL = Height1*0.5
        addHolo("",vec(-DrosselH,0,BoxL*0.8),vec(Height1,Height1,   BoxL),ang(),Color1,"rcube"        ,Mater1,LapaRT1)
        addHolo_clip(vec(),ang(90,0,0),BoxL*0.8)
        #
        #- LapaRT2
        addHoloBone(LapaRT2,vec(-DrosselH,0,Radius2        +XX),vec(Height2,Height2,Radius2),ang(),Color1,"rcube_thin" ,Mater1,LapaRT1)
        #
        #- LapaRT3
        addHoloBone(LapaRT3,vec(        0,0,Radius3-Radius2+XX),vec(Height3,Height3,Radius3),ang(),Color1,"hq_tube"    ,Mater1,LapaRT2)
        #
        #- LapaRT4
        addHoloBone(LapaRT4,vec(        0,0,Radius4-Radius3+XX),vec(Height4,Height4,Radius4),ang(),Color1,"hq_cylinder",Mater1,LapaRT3)
        #
        #- Fingertip
        addHoloBone(Fingertip,vec(0,0,Radius4),vec(Height4),ang(0,0,0),Color1,"hq_sphere",Mater1,LapaRT4)
        #
        #
        #
        #- drossel
        addHoloBone(Drossel,vec(),vec(0.01,Height1,DrosselR)*0.95,ang(),Color1*2,"cube",Mater1,LapaRT1)
        addHolo_clip(vec(),ang(90,0,0),0)
        addHolo("",vec(),vec(DrosselR,DrosselR,Height1)*0.95,ang(0,0,90),Color1,"hq_cylinder",Mater1,Drossel)
        addHolo_clip(vec(),ang(0,180,0),0)
        #
        ################
        
    }
    addHolo_timer("animation")
    
    DATA["length", array] = array(Radius0,Radius1,Radius2,Radius3,Radius4,Height4)
}


if(clk("animation")) {
        timer("animation", 50)
    
    if(changed(0)) {
        DATA["lastCurtime", number] = curtime()
        
        print("Использованно голограмм: " + AddHolo_counter)
        
        for(Lapka_i = 1,3) {
            local ID = array()
            local ENT = array()
            local Offset = array()
            for(C = 0,5) {
                local Name = C != 5 ? "lapaRT"+C+Lapka_i : "fingertip"+Lapka_i
                
                
                ID:pushNumber(    AddHolo[Name + "/index"     , number])
                ENT:pushEntity(   AddHolo[Name + "/entity"    , entity])
                Offset:pushVector(AddHolo[Name + "/offset/pos", vector])
            }
            DATA["ID"    +Lapka_i, array] = ID
            DATA["ENT"   +Lapka_i, array] = ENT
            DATA["offset"+Lapka_i, array] = Offset
        }
    }
    local LastCurtime = DATA["lastCurtime", number]
    local Curtime = DATA["lastCurtime", number] = curtime()
    local Interval = Curtime - LastCurtime
    #local Loop = Interval / 0.015625
    
    local O = owner()
    
    local Key = O:keyPressed("mouse_4")
    if(changed(Key) & Key) {
        local KEY = DATA["KEY", number] = !DATA["KEY", number]
        
        
        for(Lapka_i = 1,3) {
            local ID     = DATA["ID"    +Lapka_i, array]
            local ENT    = DATA["ENT"   +Lapka_i, array]
            local Offset = DATA["offset"+Lapka_i, array]
            
            for(C = 0,4) {
                local Cell=C+2
                local LastCell=C+1
                
                
                local Pos = Offset[Cell, vector] #+ vec(10,0,0)*KEY
                holoPos(ID[Cell, number], ENT[LastCell, entity]:toLocal(Pos))
            }
        }
    }
}




























































































































































setName("Turret_01_002_model\nOPS: " + ops() + "\nCPU: " + floor(cpuUsage() * 1e6))
