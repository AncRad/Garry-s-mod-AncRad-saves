@name UMP_0.2


@inputs 
@outputs 


####
#- base
@persist [E O]:entity [Q]:table
#
#- egp
@persist EGP_e:entity
@persist EGP_step EGP_stepDATA:table
@persist [EGP_color1 EGP_color2 EGP_color3 EGP_color4 EGP_color5]:vector
@persist EGP_fontSize1 EGP_fontSize2 EGP_fontSize3

@persist ActList:table
@persist [CurrentTab LastTab]:string
#
#- interface
@persist [User]:entity
#
#- 
@persist 
#
#- 
@persist 
#
####

@trigger none
@model models/bull/gates/processor.mdl



if(changed(0)) {
    
    ####
    #- base
    #include "EGPS"
    #
    E = entity() E:setSkin(1)
    O = owner()
    User = O
    
    noDuplications()
    runOnChat(1)
    runOnHTTP(1)
    
    EGP_e = E:isWeldedTo()
    if(EGP_e:type() != "gmod_wire_egp") {
        printColor(vec(255,100,10), "[UMP] ", vec(240,240,255), "Этот чип следует ставить прямо на EGP screen с разрешением 512x512.")
        selfDestruct()
        exit()
    }
    
    timer("", 1)
    #
    ####
    
    ####
    #- func
    #
    #- 
    function addAct() {
        
    }
    #
    ####
}


if(clk("")) {
        timer("", 50)
    
    
    if(EGP_step == -1) {
        
        local Aim = User:aimEntity() == EGP_e
        local Click = (User:keyAttack1() | User:keyUse()) & Aim
        local Target = Q["cursorTarget", string]
        local CursorPos = Q["cursorPos", vector2]
        if(Aim) {
            local AimPos = EGP_e:toLocal(User:aimPos())
            
            CursorPos = vec2(256) + vec2(AimPos):rotate(90)*vec2(-1,1)/(93.125)*(512)
            Q["cursorPos", vector2] = CursorPos
            
            
            
            if(changed(CursorPos)) {
                Target = egpGetTarget(CursorPos, "")
                Q["cursorTarget", string] = Target
            }
        }
        
        if(changed(Click) & Click) {
            if(Target) {
                local Target_leftClickActList = EGPS[Target + "/table", table]["leftClickActList", table]
                local Target_leftClickActList_count = Target_leftClickActList:count()
                if(Target_leftClickActList_count) {
                    for(C = 1,Target_leftClickActList_count) {
                        ActList:pushTable(table():add(Target_leftClickActList[C, table]))
                    }
                }
            }
        }
        
        
        
        
        
        
        
        
        
        ####
        #- act system
        local Act_c = ActList:count()
        local C = Q["actPos", number]
        local Counter = 0
        #
        while(perf(90) & Counter < Act_c) {
            Counter++
            C++
            if(C > Act_c) {C = 1}
            #
            local Act_T = ActList[C, table]
            local Act_t = Act_T["actType", string]
            
            local Delete = 1
            switch(Act_t) {
                    #
                    #
                    #
                case "tabChange",
                    LastTab = CurrentTab
                    CurrentTab = Act_T["newTab", string]
                    
                    if(egpGetIndex("tabPanel/but#" + LastTab   )) {egpSetColor("tabPanel/but#" + LastTab   , EGP_color3)}
                    if(egpGetIndex("tabPanel/but#" + CurrentTab)) {egpSetColor("tabPanel/but#" + CurrentTab, EGP_color4)}
                break
                    #
                    #
                    #
                case "tab",
                    
                    Delete = 0
                    #
                    local CurrentTab_changed = changed(CurrentTab)
                    if(CurrentTab_changed) {
                        egpGroupRemove("tab")
                    }
                    #
                    #
                    #
                    if(CurrentTab == "default") {
                        if(CurrentTab_changed) {
                            
                            egpGroupOpen("tab")
                            ####
                            #- 
                            local TB_n = EGP_stepDATA["TB_n", string ]
                            local TB_s = EGP_stepDATA["TB_s", vector2]
                            #
                            #- 
                            local DC1_n = "tab/default/cog1"
                            local DC2_n = "tab/default/cog2"
                            local DC1_s = TB_s[2]*0.65
                            local DC1_p = v(DC1_s/2,0):rotate(45)
                            local DC2_s = DC1_s*0.5
                            local DC2_p = v(-DC2_s/2*0.81,0):rotate(45)
                            local C_p = (DC1_p+DC2_p)*0.75
                            local DC1_p = DC1_p - C_p
                            local DC2_p = DC2_p - C_p
                            egpAddBox(DC1_n, v(DC1_s), DC1_p)
                            egpSetMaterial("expression 2/cog")
                            egpSetColor(15)
                            egpSetParent(TB_n)
                            egpAddBox(DC2_n, v(DC2_s), DC2_p)
                            egpSetMaterial("expression 2/cog")
                            egpSetColor(15)
                            egpSetParent(TB_n)
                            
                            local DT_n = "tab/default/text"
                            local DT_s = TB_s
                            local DT_p = -DT_s/2
                            egpAddText(DT_n,"Universal EGP music player\nvresion 0.2",DT_s,DT_p)
                            egpSetAlign(1,1)
                            egpSetSize(EGP_fontSize3)
                            egpSetParent(TB_n)
                            #
                            #- 
                            Q["tab/default/cogRotationKoeff", number] = DC1_s/DC2_s
                            #
                            ####
                            egpGroupClose("tab")
                        }
                        local Angle = curtime()*5
                        egpSetAng("tab/default/cog1", Angle)
                        egpSetAng("tab/default/cog2", 11.25 - Angle * Q["tab/default/cogRotationKoeff", number])
                        #
                        ####
                    }
                    #
                    #
                    #
                    elseif(CurrentTab == "search") {
                        if(CurrentTab_changed) {
                            
                            egpGroupOpen("tab")
                            ####
                            #- 
                            local TB_n = EGP_stepDATA["TB_n", string ]
                            local TB_s = EGP_stepDATA["TB_s", vector2]
                            #
                            #- 
                            local RB_n = "tab/search/requestBox"
                            local RB_s = v(TB_s[1],EGP_fontSize2)
                            local RB_p = v(0,(RB_s[2]-TB_s[2])/2)
                            egpAddBox(RB_n,RB_s,RB_p)
                            egpSetColor(EGP_color2)
                            egpSetParent(TB_n)
                            egpClickMode()
                            local RT_n = "tab/search/requestText"
                            local RT_s = v(RB_s[1]*2,EGP_fontSize2)
                            local RT_p = v(2-RB_s[1]/2,-RT_s[2]/2-1)
                            local RT_t = "REQUEST TEXT"
                            egpAddText(RT_n, RT_t,RT_s,RT_p)
                            egpSetColor(EGP_color4)
                            egpSetSize(EGP_fontSize2)
                            egpSetParent(RB_n)
                            
                            
                            local RP_n = "tab/search/resultBox"
                            local RP_s = v(TB_s[1],TB_s[2]-RB_s[2]-2)
                            local RP_p = v(0,(TB_s[2]-RP_s[2])/2)
                            egpAddBox(RP_n,RP_s,RP_p)
                            egpSetColor(EGP_color1)
                            egpSetParent(TB_n)
                            egpClickMode()
                            
                            local Scroll_N = EGPS[S_n + "#scroll", number] #2018.06.18 3:14
                            
                            local RNB_n = "tab/search/resultNumberBox"
                            local RNB_s = v(floor(EGP_fontSize2*0.6*3+1),RP_s[2])
                            local RNB_p = v((RNB_s[1]-RP_s[1])/2,0)
                            egpAddBox(RNB_n,RNB_s,RNB_p)
                            egpSetColor(EGP_color2)
                            egpSetParent(RP_n)
                            #egpClickMode()
                            local RNT_n = "tab/search/resultNumberText"
                            local RNT_s = v(RNB_s[1],RNB_s[2])
                            local RNT_p = -RNT_s/2
                            local RNT_t = "000\n":repeat(20)
                            egpAddText(RNT_n, RNT_t,RNT_s,RNT_p)
                            egpSetColor(EGP_color3)
                            egpSetAlign(2,0)
                            egpSetSize(EGP_fontSize2)
                            egpSetParent(RNB_n)
                            
                            local RNameB_n = "tab/search/resultNameBox"
                            egpAddBox(RNameB_n,v(),v())
                            egpSetColor(EGP_color2)
                            egpSetParent(RP_n)
                            egpClickMode()
                            local RNameT_n = "tab/search/resultNameText"
                            local RNameT_t = "Seether - Roses\n":repeat(20)
                            egpAddText(RNameT_n, RNameT_t,v(),v())
                            egpSetColor(EGP_color4)
                            egpSetSize(EGP_fontSize2)
                            egpSetParent(RNameB_n)
                            
                            local RSB_n = "tab/search/resultScrollBase"
                            local RSB_s = v(16,RP_s[2])
                            local RSB_p = v((RP_s[1]-RSB_s[1])/2,0)
                            egpAddBox(RSB_n,RSB_s,RSB_p)
                            egpSetColor(EGP_color2*0.5)
                            egpSetParent(RP_n)
                            egpClickMode()
                            local RS_n = "tab/search/resultScroll"
                            local RS_s = v(RSB_s[1],RSB_s[2]*0.3)
                            local RS_p = v(0,(RS_s[2]-RSB_s[2])/2)
                            egpAddBox(RS_n,RS_s,RS_p)
                            egpSetColor(EGP_color2)
                            egpSetParent(RSB_n)
                            #egpClickMode()
                            EGPS[RSB_n + "/table", table]["leftClickActList", table] = table(table("actType" = "scroll", "Scroll_n" = RS_n, "ScrollBase_n" = RSB_n))
                            
                            local RTB_n = "tab/search/resultTimeBox"
                            local RTB_s = v(floor(EGP_fontSize2*0.6*(4+0.4)+1),RP_s[2])
                            local RTB_p = v((RP_s[1]-RTB_s[1])/2-RSB_s[1]-2,0)
                            egpAddBox(RTB_n,RTB_s,RTB_p)
                            egpSetColor(EGP_color2)
                            egpSetParent(RP_n)
                            #egpClickMode()
                            local RTT_n = "tab/search/resultTimeText"
                            local RTT_s = v(RTB_s[1],RTB_s[2])
                            local RTT_p = -RTT_s/2
                            local RTT_t = "00:00\n":repeat(20)
                            egpAddText(RTT_n, RTT_t,RTT_s,RTT_p)
                            egpSetColor(EGP_color3)
                            egpSetAlign(2,0)
                            egpSetSize(EGP_fontSize2)
                            egpSetParent(RTB_n)
                            
                            local RNameB_s = v(RP_s[1] -RNB_s[1]-2 -RSB_s[1]-2 -RTB_s[1]-2,RP_s[2])
                            local RNameB_p = v(RNB_p[1]+(RNB_s[1]+RNameB_s[1])/2+2,0)
                            egpSetSize(RNameB_n, RNameB_s)
                            egpSetPos(RNameB_n, RNameB_p)
                            local RNameT_s = v(RNameB_s[1]*10,RNameB_s[2])
                            local RNameT_p = v(-RNameB_s[1]/2,-RNameT_s[2]/2)
                            egpSetSize(RNameT_n, RNameT_s)
                            egpSetPos(RNameT_n, RNameT_p)
                            #
                            ####
                            egpGroupClose("tab")
                        }
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                    }
                    else {
                        ActList:pushTable(table("actType" = "tabChange", "newTab" = "search")) #default
                    }
                break
                    #
                    #
                    #
                case "scroll",
                    
                    local SB_n = Act_T["ScrollBase_n", string]
                    local S_n = Act_T["Scroll_n", string]
                    if(egpGetIndex(SB_n) & egpGetIndex(S_n)) {} else {break}
                    
                    local StarCursorPos = Act_T["startCursorPos", vector2]
                    if(!StarCursorPos) {
                        StarCursorPos = Act_T["startCursorPos", vector2] = CursorPos
                        local StartScrollColor = egpGetColor(S_n) Act_T["startScrollColor", vector] = StartScrollColor
                        local StartScroll_py = egpGetPos(S_n)[2] Act_T["StartScroll_py", number] = StartScroll_py
                        egpSetColor(S_n,min(StartScrollColor*2,vec(255)))
                    }
                    if(!Click) {
                        egpSetColor(S_n,Act_T["startScrollColor", vector])
                        break
                    }
                    local CursorMove_y = (CursorPos - StarCursorPos)[2]
                        if(changed(CursorMove_y)) {
                        local SB_sy = egpGetSize(SB_n)[2]
                        local S_sy = egpGetSize(S_n)[2]
                        local Ampl = SB_sy - S_sy
                        local StartScroll_py = Act_T["StartScroll_py", number]
                        
                        local S_py = clamp(StartScroll_py+CursorMove_y,-Ampl/2,Ampl/2)
                        EGPS[S_n + "#scroll", number] = (S_py+Ampl/2)/Ampl if(!inrange((S_py+Ampl/2)/Ampl,0,1)) {print("errorScroll")}
                        egpSetPos(S_n, v(0,S_py))
                    }
                    Delete = 0
                break
                    #
                    #
                    #
            }
            #
            if(Delete) {
                ActList:remove(C)
                Counter--
                Act_c--
                C--
                continue
            }
            #
            #ActList[C, table] = Act_T
        }
        #
        Q["actPos", number] = C
        #
        ####
        
        
        
        
        
        
        
        
        
        
        
        
    }
    #
    #- build
    #
    elseif(EGP_step == 0) {
        
        EGP_fontSize1 = 20
        EGP_fontSize2 = 12
        EGP_fontSize3 = 30
        
        EGP_color1 = vec(0)
        EGP_color2 = vec(30)
        
        EGP_color3 = vec(150)
        EGP_color4 = vec(255)
        
        ####
        #- 
        egpSelect()
        egpClear()
        #
        #- base
        local Base_n = "ump"
        local Base_s = v(512)
        local Base_p = v(256)
        egpAddBox(Base_n,Base_s,Base_p)
        egpSetColor(EGP_color1)
        egpClickMode()
        #
        #- track panel
        local TC_n = "trackPanel"
        local TC_s = v(Base_s[1],44)
        local TC_p = v(0,(TC_s[2]-Base_s[2])/2)
        egpAddBox(TC_n,TC_s,TC_p)
        egpSetColor(EGP_color2)
        egpSetParent(Base_n)
        egpClickMode()
        #
        #- 
        EGP_stepDATA["Base_n", string ] = Base_n
        EGP_stepDATA["Base_s", vector2] = Base_s
        
        EGP_stepDATA["TC_n", string ] = TC_n
        EGP_stepDATA["TC_s", vector2] = TC_s
        EGP_stepDATA["TC_p", vector2] = TC_p
        
        EGP_step++
        #
        ####
    }
    elseif(EGP_step == 1) {
        
        ####
        #- 
        local Base_n = EGP_stepDATA["Base_n", string ]
        local Base_s = EGP_stepDATA["Base_s", vector2]
        
        local TC_s = EGP_stepDATA["TC_s", vector2]
        local TC_p = EGP_stepDATA["TC_p", vector2]
        #
        #- tab panel
        TP_n = "tabPanel"
        TP_s = v(Base_s[1],EGP_fontSize1)
        TP_p = v(0,TC_p[2]+(TC_s[2]+TP_s[2])/2+2)
        egpAddBox(TP_n,TP_s,TP_p)
        egpSetColor(EGP_color2)
        egpSetParent(Base_n)
        egpClickMode()
        
        local But_a = array("search","playLists","settings", "kekus")
        local But_c = But_a:count()
        local But_L = TP_s[1] / But_c
        foreach(C, But_n:string = But_a) {
            local TB_n = TP_n + "/but#" + But_n
            local TB_s = v(But_L,TP_s[2])
            local TB_p = v(But_L*(C-1)-TP_s[1]/2,-TP_s[2]/2-1)
            local TB_t = "#" + But_n:upper()
            egpAddText(TB_n,TB_t,TB_s,TB_p)
            egpSetSize(EGP_fontSize1)
            egpSetColor(EGP_color3)
            egpSetAlign(1,0)
            egpSetParent(TP_n)
            egpClickMode()
            EGPS[TB_n + "/table", table]["leftClickActList", table] = table(table("actType" = "tabChange", "newTab" = But_n))
        }
        #
        #-
        EGP_stepDATA["TP_s", vector2] = TP_s
        EGP_stepDATA["TP_p", vector2] = TP_p
        
        EGP_step++
        #
        ####
    }
    elseif(EGP_step == 2) {
        
        ####
        #- 
        local Base_n = EGP_stepDATA["Base_n", string ]
        local Base_s = EGP_stepDATA["Base_s", vector2]
        #
        #- system panel
        SP_n = "systemPanel"
        SP_s = v(Base_s[1],EGP_fontSize2)
        SP_p = v(0,(Base_s[2]-SP_s[2])/2)
        egpAddBox(SP_n,SP_s,SP_p)
        egpSetColor(EGP_color2)
        egpSetParent(Base_n)
        egpClickMode()
        #
        #- 
        EGP_stepDATA["SP_s", vector2] = SP_s
        EGP_stepDATA["SP_p", vector2] = SP_p
        
        EGP_step++
        #
        ####
    }
    elseif(EGP_step == 3) {
        
        ####
        #- 
        local Base_n = EGP_stepDATA["Base_n", string ]
        local Base_s = EGP_stepDATA["Base_s", vector2]
        
        local TP_s = EGP_stepDATA["TP_s", vector2]
        local TP_p = EGP_stepDATA["TP_p", vector2]
        
        local SP_s = EGP_stepDATA["SP_s", vector2]
        local SP_p = EGP_stepDATA["SP_p", vector2]
        #
        #- tab box
        local TB_n = "tabBox"
        local TB_s = v(Base_s[1],Base_s[2] - (Base_s[2]/2+TP_p[2]+TP_s[2]/2) - (Base_s[2]/2-SP_p[2]+SP_s[2]/2) -4)
        local TB_p = v(0,TP_p[2]+(TP_s[2]+TB_s[2])/2+2)
        egpAddBox(TB_n,TB_s,TB_p)
        egpSetColor(EGP_color1)
        egpSetParent(Base_n)
        egpClickMode()
        #
        #-
        #ActList:pushTable(table("actType" = "tabChange", "newTab" = "default"))
        ActList:pushTable(table("actType" = "tab"))
        #
        #- 
        EGP_stepDATA["TB_n", string ] = TB_n
        EGP_stepDATA["TB_s", vector2] = TB_s
        
        EGP_step++
        #
        ####
    }
    else {
        
        ####
        #- 
        EGP_step = -1
        #
        ####
    }
}










































setName("Universal EGP music player\nvresion 0.2\nOPS: " + ops() + "\nCPU: " + round(cpuUsage()*1e6))
