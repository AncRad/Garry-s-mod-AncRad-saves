@name Q000

@inputs 
@outputs Ddd OPS CursorDown:string
@persist [E O]:entity [Q]:table

@trigger none
@model models/bull/gates/processor.mdl



if(changed(0)) {
    
    
    #include "old 28.10.2017/25.07.2017/BBB"
    
    
    E = entity() E:setSkin(1)
    O = owner()
    
    
    egpSelect(E:isWeldedTo():wirelink())
    egpClear()
    
    
    
    
    
    
    
    
    
    
    
    
    
    local FontSize = Q["fontSize", number] = 15
    local Indent   = Q["indent"  , number] = 2
    
    local Base_n = "objectList/base"
    local Base_p = egpScrSize(O) / 2 + v(380,280)
    local Base_s = v(400,500)
    egpAddBox(Base_n, Base_p, Base_s, "")
    egpSetColor(0)
    #egpSetAlpha(0)
    
    local TitleBase_n = "objectList/titleBase"
    local TitleBase_s = v(Base_s[1],20)
    local TitleBase_p = v(0,(TitleBase_s[2]-Base_s[2])/2)
    egpAddBox(TitleBase_n, TitleBase_p, TitleBase_s, "")
    egpSetParent(Base_n)
    egpSetColor(30)
    for(C = 1,2) {
        local F = C - 1
        local TBButton = "objectList/titleBase/button" + C
        local TBButton_s = v(TitleBase_s[2])
        local TBButton_p = v(TBButton_s[1]-TitleBase_s[1],0)/2 + v((Indent+TBButton_s[1])*F,0)
        egpAddBox(TBButton, TBButton_p, TBButton_s, "")
        egpSetParent(TitleBase_n)
        egpSetColor(60)
        
        Q[TitleBase_n + "/cursorTargets", array] = Q[TitleBase_n + "/cursorTargets", array]:add(array(TBButton))
    }
    
    local ScrollBase_n = "objectList/scrollBase"
    local ScrollBase_s = v(20,Base_s[2]-TitleBase_s[2]-Indent)
    local ScrollBase_p = (Base_s-ScrollBase_s)/2
    egpAddBox(ScrollBase_n, ScrollBase_p, ScrollBase_s, "")
    egpSetParent(Base_n)
    egpSetColor(30)
    local Scroll_n = "objectList/scroll"
    local Scroll_s = ScrollBase_s*v(1,1.0)
    local Scroll_p = v(0,(Scroll_s[2]-ScrollBase_s[2])/2)
    egpAddBox(Scroll_n, Scroll_p, Scroll_s, "")
    egpSetParent(ScrollBase_n)
    egpSetColor(60)
    
    local ListingBase_n = "objectList/listingBase"
    local ListingBase_s = Base_s - v(ScrollBase_s[1],TitleBase_s[2]) - v(Indent)
    local ListingBase_p = (Base_s-ListingBase_s)*v(-0.5,0.5)
    egpAddBox(ListingBase_n, ListingBase_p, ListingBase_s, "")
    egpSetParent(Base_n)
    egpSetColor(30)
    
    
    local List_n = "objectList/list"
    local List_s = ListingBase_s - v(Indent,0)
    local List_p = v(Indent,0) - List_s/2
    egpAddTextLayout(List_n, "objectList/list", List_p, List_s)
    egpSetParent(ListingBase_n)
    egpSetSize(FontSize)
    egpSetColor(255)
    local SelectList_n = "objectList/selecList"
    egpAddTextLayout(SelectList_n, "\nobjectList/selecList", v(), List_s)
    egpSetParent(List_n)
    egpSetSize(FontSize)
    egpSetColor(0,150,255)
    
    
    
    local MenuBase_n = "objectList/addMenu"
    local MenuBase_s = v(Base_s[1],20*4+Indent*4)
    local MenuBase_p = Base_p - v(0,(Base_s[2]+MenuBase_s[2])/2+Indent) * 100
    egpAddBox(MenuBase_n, MenuBase_p, MenuBase_s, "")
    egpSetColor(0)
    local MenuTitleBase_n = "objectList/addMenu/titleBase"
    local MenuTitleBase_s = v(MenuBase_s[1],20)
    local MenuTitleBase_p = v(0,(MenuTitleBase_s[2]-MenuBase_s[2])/2)
    egpAddBox(MenuTitleBase_n, MenuTitleBase_p, MenuTitleBase_s, "")
    egpSetParent(MenuBase_n)
    egpSetColor(30)
    local MenuTitle_n = "objectList/addMenu/title"
    local MenuTitle_t = "Добавить группу"
    egpAddText(MenuTitle_n, MenuTitle_t, v())
    egpSetParent(MenuTitleBase_n)
    egpSetAlign(1,1)
    egpSetSize(FontSize)
    local MenuNameBase_n = "objectList/addMenu/nameBase"
    local MenuNameBase_s = MenuTitleBase_s
    local MenuNameBase_p = v(0,MenuNameBase_s[2]+Indent)
    egpAddBox(MenuNameBase_n, MenuNameBase_p, MenuNameBase_s, "")
    egpSetParent(MenuTitleBase_n)
    egpSetColor(30)
    local MenuName_n = "objectList/addMenu/name"
    local MenuName_t = "Имя: noName"
    egpAddText(MenuName_n, MenuName_t, v(Indent-MenuNameBase_s[1]/2,0))
    egpSetParent(MenuNameBase_n)
    egpSetAlign(0,1)
    egpSetSize(FontSize)
    local MenuColorBase_n = "objectList/addMenu/colorBase"
    local MenuColorBase_s = MenuNameBase_s
    local MenuColorBase_p = MenuNameBase_p
    egpAddBox(MenuColorBase_n, MenuColorBase_p, MenuColorBase_s, "")
    egpSetParent(MenuNameBase_n)
    egpSetColor(30)
    local MenuColorScrollBase_n = "objectList/addMenu/colorScrollBase"
    local MenuColorScrollBase_s = v(MenuColorBase_s[1]-Indent*2,MenuColorBase_s[2]-Indent*2)
    local MenuColorScrollBase_p = v()
    egpAddBox(MenuColorScrollBase_n, MenuColorScrollBase_p, MenuColorScrollBase_s, "")
    egpSetParent(MenuColorBase_n)
    egpSetColor(0,255,255)
    local MenuColorScroll_n = "objectList/addMenu/colorScroll"
    local MenuColorScroll_s = v(5,MenuColorScrollBase_s[2])
    local MenuColorScroll_p = v()
    egpAddBox(MenuColorScroll_n, MenuColorScroll_p, MenuColorScroll_s, "")
    egpSetParent(MenuColorScrollBase_n)
    egpSetColor(0)
    
    local MenuCreateBase_n = "objectList/addMenu/createBase"
    local MenuCreateBase_s = v(MenuNameBase_s[1]/2-Indent*1.5, MenuNameBase_s[2])
    local MenuCreateBase_p = v(-MenuCreateBase_s[1]/2-Indent*1,MenuColorBase_p[2])
    egpAddBox(MenuCreateBase_n, MenuCreateBase_p, MenuCreateBase_s, "")
    egpSetParent(MenuColorScrollBase_n)
    egpSetColor(30)
    local MenuCreate_n = "objectList/addMenu/create"
    local MenuCreate_t = "Добавить"
    egpAddText(MenuCreate_n, MenuCreate_t, v())
    egpSetParent(MenuCreateBase_n)
    egpSetAlign(1,1)
    egpSetSize(FontSize)
    local MenuCancelBase_n = "objectList/addMenu/cancelBase"
    local MenuCancelBase_s = MenuCreateBase_s
    local MenuCancelBase_p = v(-MenuCreateBase_p[1],MenuColorBase_p[2])
    egpAddBox(MenuCancelBase_n, MenuCancelBase_p, MenuCancelBase_s, "")
    egpSetParent(MenuColorScrollBase_n)
    egpSetColor(30)
    local MenuCancel_n = "objectList/addMenu/cancel"
    local MenuCancel_t = "Отмена"
    egpAddText(MenuCancel_n, MenuCancel_t, v())
    egpSetParent(MenuCancelBase_n)
    egpSetAlign(1,1)
    egpSetSize(FontSize)
    
    
    
    
    
    
    Q["cursorTargets", array] = Q["cursorTargets", array]:add(array(Base_n,MenuBase_n))
    Q[Base_n      + "/cursorTargets", array] = array(TitleBase_n, Scroll_n, ListingBase_n)
    Q[MenuBase_n  + "/cursorTargets", array] = array(MenuNameBase_n,MenuColorScroll_n,MenuCreateBase_n,MenuCancelBase_n)
        
    
    Q["objectList/lines"       , number] = floor(ListingBase_s[2]/FontSize)
    Q["objectList/scroll"      , number] = 0
    Q["objectList/scrollOffset", number] = 0
    
    
    
    
    local ChatList_n = "chatList"
    local ChatList_s = v(400, FontSize * 8)
    local ChatList_p = v(9999)
    egpAddBox(ChatList_n, ChatList_p, ChatList_s, "")
    egpSetColor(0)
    
    local ChatListScrollBase_n = "chatList/scrollBase"
    local ChatListScrollBase_s = v(20,ChatList_s[2])
    local ChatListScrollBase_p = v((ChatList_s[1]-ChatListScrollBase_s[1])/2,0)
    egpAddBox(ChatListScrollBase_n, ChatListScrollBase_p, ChatListScrollBase_s, "")
    egpSetParent(ChatList_n)
    egpSetColor(30)
    local ChatListScroll_n = "chatList/scroll"
    local ChatListScroll_s = v(20,ChatList_s[2]*1.0)
    local ChatListScroll_p = v(0,(ChatListScroll_s[2]-ChatListScrollBase_s[2])/2)
    egpAddBox(ChatListScroll_n, ChatListScroll_p, ChatListScroll_s, "")
    egpSetParent(ChatListScrollBase_n)
    egpSetColor(60)
    
    local ChatListBase_n = "chatList/base"
    local ChatListBase_s = ChatList_s-v(ChatListScrollBase_s[1]+Indent,0)
    local ChatListBase_p = v((ChatListBase_s[1]-ChatList_s[1])/2,0)
    egpAddBox(ChatListBase_n, ChatListBase_p, ChatListBase_s, "")
    egpSetParent(ChatList_n)
    egpSetColor(30)
    local ChatList_n = "chatList/list"
    local ChatList_s = ChatListBase_s-v(Indent,0)
    local ChatList_p = v(Indent,0)-ChatList_s/2
    egpAddTextLayout(ChatList_n, "chatList/list", ChatList_p, ChatList_s)
    egpSetParent(ChatListBase_n)
    egpSetSize(FontSize)
    egpSetColor(255)
    local ChatListSelect_n = "chatList/listSelect"
    local ChatListSelect_s = ChatList_s
    local ChatListSelect_p = ChatList_p
    egpAddTextLayout(ChatListSelect_n, "\nchatList/listSelect", ChatListSelect_p, ChatListSelect_s)
    egpSetParent(ChatListBase_n)
    egpSetSize(FontSize)
    egpSetColor(0,150,255)
    
    
    Q["chatList/lines"       , number] = floor(ChatListBase_s[2]/FontSize)
    Q["chatList/scroll"      , number] = 0
    Q["chatList/scrollOffset", number] = 0
    
    Q["cursorTargets", array] = Q["cursorTargets", array]:add(array(ChatList_n))
    Q[ChatList_n + "/cursorTargets", array] = array(ChatListBase_n, ChatListScroll_n)
    
    
    function egpAddClick(CursorTarget:string, Cursor:vector2) {
        
        local Click = Q["click", number] = Q["click", number] + 1
        
        Q[Click + "/cursorPos", vector2] = Cursor
        Q[Click + "/target", string] = CursorTarget
        
        
        Q["clicks", array] = Q["clicks", array]:add(array(Click))
    }
    function callChatList(Obj_n:string) {
        
        local FontSize = Q["fontSize", number]
        local Indent   = Q["indent"  , number]
        
        local Obj_s = egpGetSize(Obj_n)
        local Obj_p = egpGetGlobalPos(Obj_n)
        
        local ChatList_n = "chatList"
        local ChatList_s = v(Obj_s[1],FontSize*8)
        local ChatList_p = Obj_p - v(0,(ChatList_s[2]+Obj_s[2])/2+Indent)
        egpSetSize(ChatList_n, ChatList_s)
        egpSetPos(ChatList_n, ChatList_p)
        
        local ChatListScrollBase_n = "chatList/scrollBase"
        local ChatListScrollBase_s = v(20,ChatList_s[2])
        local ChatListScrollBase_p = v((ChatList_s[1]-ChatListScrollBase_s[1])/2,0)
        egpSetSize(ChatListScrollBase_n, ChatListScrollBase_s)
        egpSetPos(ChatListScrollBase_n, ChatListScrollBase_p)
        local ChatListScroll_n = "chatList/scroll"
        local ChatListScroll_s = v(20,ChatList_s[2]*1.0)
        local ChatListScroll_p = v(0,(ChatListScroll_s[2]-ChatListScrollBase_s[2])/2)
        egpSetSize(ChatListScroll_n, ChatListScroll_s)
        egpSetPos(ChatListScroll_n, ChatListScroll_p)
        
        
        local ChatListBase_n = "chatList/base"
        local ChatListBase_s = ChatList_s-v(ChatListScrollBase_s[1]+Indent,0)
        local ChatListBase_p = v((ChatListBase_s[1]-ChatList_s[1])/2,0)
        egpSetSize(ChatListBase_n, ChatListBase_s)
        egpSetPos(ChatListBase_n, ChatListBase_p)
        local ChatList_n = "chatList/list"
        local ChatList_s = ChatListBase_s-v(Indent,0)
        local ChatList_p = v(Indent,0)-ChatList_s/2
        egpSetSize(ChatList_n, ChatList_s)
        egpSetPos(ChatList_n, ChatList_p)
        local ChatListSelect_n = "chatList/listSelect"
        local ChatListSelect_s = ChatList_s
        local ChatListSelect_p = ChatList_p
        egpSetSize(ChatListSelect_n, ChatListSelect_s)
        egpSetPos(ChatListSelect_n, ChatListSelect_p)
        
        egpAddClick("chatList", v())
        
    }
    
    
    
    
    timer("", 0)
}

if(clk("")) {
        timer("", 100)
    
    if(changed(0)) {
        
        runOnChat(1)
        
        function number globalInrange(Name:string, CursorPos:vector2) {
            local TargetGP = egpGetGlobalPos(Name)
            local TargetS  = egpGetSize(Name) / 2
            local Inrange = inrange(CursorPos - TargetGP,-TargetS,TargetS)
            
            return Inrange
        }
        function string cursorTarget(TargetList:string, CursorPos:vector2) {
            
            if(Q["cursorTarget/end", number]) {
                local CursorTarget = Q["cursorTarget", string]
                if(CursorTarget) {
                    if(globalInrange(CursorTarget, CursorPos)) {
                        return CursorTarget
                    }
                }
            }
            
            Q["cursorDown", string] = ""
            local CursorTargets = Q[TargetList, array]
            local Return = ""
            local Real = 0
            while(1) {
                Real++
                local Target = CursorTargets[Real, string]
                if(Target) {
                    if(globalInrange(Target, CursorPos)) {
                        Return = Target
                        local Targets = Q[Target + "/cursorTargets", array]
                        if(Targets:count()) {
                            CursorTargets = Targets
                            Real = 0
                        }
                        else {
                            Q["cursorTarget/end", number] = 1
                            Q["cursorTarget", string] = Target
                            return Target
                        }
                        local CursorDown = Q["cursorDown", string]
                        Q["cursorDown", string] = CursorDown + (CursorDown ? "/" : "") + Target
                    }
                }
                else {
                    Q["cursorTarget/end", number] = 0
                    Q["cursorTarget", string] = Return
                    return Return
                }
            }
        }
        function string cursorTarget(CursorPos:vector2) {
            cursorTarget("cursorTargets" , CursorPos)
        }
    }
    
    
    if(O:keyPressed("C")) {
        ###########################################################################################
        ############################################################################################
        local Eye        = O:eye()                                                                ###
        local EyeAngles  = O:eyeAngles()                                                           ###
        if(changed(Eye) | changed(EyeAngles)) {                                                     ##
            local EyeA       = EyeAngles:forward()                                                  ##
            local EgpScrSize = egpScrSize(O)                                                        ##
                                                                                                    ##
            local Holo = holoEntity(0)                                                              ##
            if(!Holo) {holoCreate(0,vec(),vec())}                                                   ##
            holoAng(0, EyeAngles)                                                                   ##
                                                                                                    ##
            local Cos = Eye[1] * EyeA[1] + Eye[2] * EyeA[2] + Eye[3] * EyeA[3]                      ##
            local CursorV = (Holo:toLocal(Eye / Cos) / vec(1, -1.332, -0.75) + vec(0, 1, 1)) / 2    ##
                                                                                                    ##
            local Cursor = EGP["cursor", vector2] = vec2(CursorV[2], CursorV[3]) * EgpScrSize      ###
        }                                                                                         ###
        ############################################################################################
        ###########################################################################################
        
        
        
        
        
        
        
        
        
        
        
        
    }
    
    
    local Cursor = EGP["cursor", vector2]
    local CursorTarget = Q["cursorTarget", string]
    if(changed(Cursor)) {
        cursorTarget(Cursor)
    }
    
    KeyClick = O:keyPressed("E") | O:keyAttack1()
    
    if(!Q["clickLock", number]) {
        #[
        if(changed(CursorTarget) & CursorTarget) {
            local Click = Q["click", number] = Q["click", number] + 1
            
            Q[Click + "/type"     , string ] = "select"
            Q[Click + "/cursorPos", vector2] = Cursor
            Q[Click + "/target"   , string ] = CursorTarget
            
            
            Q["clicks", array] = Q["clicks", array]:add(array(Click))
        }
        ]#
        
        if(changed(KeyClick) & KeyClick) {
            egpAddClick(CursorTarget, Cursor)
        }
    }
    
    local Clear = array()
    foreach(C, Click:number = Q["clicks", array]) {
        local Element = Q[Click + "/target", string]
        
        local InCase = 0
        switch(Element) {
            #####################################################################################
            ##################################################################################### OBJ BUTTON 1
            #####################################################################################
            case "objectList/titleBase/button1",
                if(!Q["clickLock", number]) {
                    Q["clickLock", number] = 1
                    
                    egpSetColor("objectList/titleBase/button1", 0,150,255)
                }
                else {
                    if(KeyClick) {
                    }
                    else {
                        Q["clickLock", number] = 0
                        egpSetColor("objectList/titleBase/button1", 60)
                        if(globalInrange("objectList/titleBase/button1", Cursor)) {
                            local Indent = Q["indent", number] = 2
                            
                            local Base_n = "objectList/nase"
                            local Base_s = egpGetSize(Base_n)
                            local Base_p = egpGetPos(Base_n)
                            local MenuBase_n = "objectList/addMenu"
                            local MenuBase_s = v(Base_s[1],20*4+Indent*4)
                            local MenuBase_p = Base_p - v(0,(Base_s[2]+MenuBase_s[2])/2+Indent)
                            egpSetPos(MenuBase_n, MenuBase_p)
                        }
                    }
                    
                    #"objectList/addMenu/nameBase","objectList/addMenu/colorScroll","objectList/addMenu/createBase","objectList/addMenu/cancelBase"
                }
                InCase = KeyClick
            break
            #####################################################################################
            ##################################################################################### OBJ SCROLL
            #####################################################################################
            case "objectList/scroll",
                if(!Q["clickLock", number]) {
                    Q["clickLock", number] = 1
                    
                    egpSetColor("objectList/scroll", 0,150,255)
                }
                
                if(KeyClick) {
                    
                }
                else {
                    
                    Q["clickLock", number] = 0
                    egpSetColor("objectList/scroll", 60)
                }
                InCase = KeyClick
            break
            
            
            
            
            #####################################################################################
            ##################################################################################### ADD MENU
            #####################################################################################
            case "objectList/addMenu/nameBase",
                if(!Q["clickLock", number]) {
                    
                    egpSetColor("objectList/addMenu/nameBase", 0,150,255)
                    Q["clickLock", number] = 1
                }
                
                if(KeyClick) {
                    
                }
                else {
                    if(globalInrange("objectList/addMenu/nameBase", Cursor)) {
                        local MenuNameBase_n = "objectList/addMenu/nameBase"
                        callChatList(MenuNameBase_n)
                    }
                    else {
                        egpSetColor("objectList/addMenu/nameBase", 30)
                    }
                    
                    Q["clickLock", number] = 0
                }
                InCase = KeyClick
            break
            case "objectList/addMenu/colorScroll",
                if(!Q["clickLock", number]) {
                    
                    Q["cursorStartPos", vector2] = Cursor
                    Q["scrollStartPos", vector2] = egpGetPos("objectList/addMenu/colorScroll")
                    Q["clickLock", number] = 1
                }
                
                if(KeyClick) {
                    
                    local CursorStartPos = Q[Click + "/cursorPos", vector2]
                    local Dif = Cursor - CursorStartPos
                    
                    if(changed(Dif)) {
                        local MenuColorScrollBase_n = "objectList/addMenu/colorScrollBase"
                        local MenuColorScrollBase_s = egpGetSize(MenuColorScrollBase_n)
                        local MenuColorScroll_n = "objectList/addMenu/colorScroll"
                        local MenuColorScroll_s = egpGetSize(MenuColorScroll_n)
                        
                        local Clamp = (MenuColorScrollBase_s[1]-MenuColorScroll_s[1])/2
                        local MenuColorScroll_p = v(clamp(Q["scrollStartPos", vector2][1] + Dif[1],-Clamp,Clamp),0)
                        
                        local Color = hsv2rgb((0.5 + MenuColorScroll_p[1] / Clamp/2) * 360, 1, 1)
                        
                        egpSetPos(MenuColorScroll_n, MenuColorScroll_p)
                        egpSetColor(MenuColorScrollBase_n, Color)
                    }
                }
                else {
                    
                    Q["clickLock", number] = 0
                }
                InCase = KeyClick
            break
            
            case "objectList/addMenu/createBase",
                if(!Q["clickLock", number]) {
                    
                    Q["clickLock", number] = 1
                    egpSetColor("objectList/addMenu/create", 0,150,255)
                }
                
                if(KeyClick) {
                    
                }
                else {
                    if(globalInrange("objectList/addMenu/createBase", Cursor)) {
                        local MenuBase_n = "objectList/addMenu"
                        local MenuBase_p = v(99999)
                        egpSetPos(MenuBase_n, MenuBase_p)
                        
                        #[
                        local Name = ""
                        local Color = vec(255)
                        
                        local ListID = Q["objectList/listID", number] = Q["objectList/listID", number] + 1
                        Q["objectList/list", array] = Q["objectList/list", array]:add(array(ListID))
                        Q[ListID + "/list/name", string] = (Name ? Name : "noName" + ListID)
                        
                        local Indent   = Q["indent"  , number]
                        local FontSize = Q["fontSize", number]
                        
                        local ListingBase_n = "objectList/listingBase"
                        local ListingBase_s = egpGetSize(ListingBase_n)
                        
                        local List_n = "objectList/list" + ListID
                        local List_s = ListingBase_s - v(Indent,0)
                        local List_p = v(Indent,0) - List_s/2
                        egpAddTextLayout(List_n, "", List_p, List_s)
                        egpSetParent(ListingBase_n)
                        egpSetSize(FontSize)
                        egpSetColor(Color)
                        ]#
                    }
                    
                    Q["clickLock", number] = 0
                    egpSetColor("objectList/addMenu/create", 255)
                }
                InCase = KeyClick
            break
            case "objectList/addMenu/cancelBase",
                if(!Q["clickLock", number]) {
                    
                    Q["clickLock", number] = 1
                    egpSetColor("objectList/addMenu/cancel", 0,150,255)
                }
                
                if(KeyClick) {
                    
                }
                else {
                    if(globalInrange("objectList/addMenu/cancelBase", Cursor)) {
                        local MenuBase_n = "objectList/addMenu"
                        local MenuBase_p = v(99999)
                        egpSetPos(MenuBase_n, MenuBase_p)
                    }
                    
                    Q["clickLock", number] = 0
                    egpSetColor("objectList/addMenu/cancel", 255)
                }
                InCase = KeyClick
            break
            
            
            #####################################################################################
            ##################################################################################### CHAT LIST
            #####################################################################################
            case "chatList",
                
                local LastSaids = Q["lastSaids", array]
                local Count = LastSaids:count()
                if(changed(Count)) {
                    
                    local FontSize = Q["fontSize", number] = 15
                    
                    local ChatList_n = "chatList/list"
                    local ChatList_s = egpGetSize(ChatList_n)
                    local ChatList_t = ""
                    local ChatListSelect_n = "chatList/listSelect"
                    local ChatListSelect_t = ""
                    
                    local Lines = floor(ChatList_s[2] / FontSize)
                    
                    local In = 1
                    local To = clamp(Count,1,Lines)
                    for(C = In, To) {
                        local F = C + 0
                        local LS = LastSaids[F, string]
                        
                        ChatList_t       += (ChatList_t ? "\n" : "") + LS
                        ChatListSelect_t += (ChatListSelect_t ? "\n" : "")
                    }
                    
                    egpSetText(ChatList_n,ChatList_t)
                    egpSetText(ChatListSelect_n,ChatListSelect_t)
                }
                
                InCase = Q["chatList/enable", number]
            break
            case "chatList/scroll",
                if(!Q["clickLock", number]) {
                    Q["clickLock", number] = 1
                    
                    egpSetColor("chatList/scroll", 0,150,255)
                }
                
                if(KeyClick) {
                    
                }
                else {
                    
                    Q["clickLock", number] = 0
                    egpSetColor("chatList/scroll", 60)
                }
                InCase = KeyClick
            break
        }
        if(!InCase) {
            Clear = array(C):add(Clear)
        }
    }
    foreach(C, I:number = Clear) {
        Q["clicks", array]:remove(I)
    }
}




if(chatClk(O)) {
    local LS = O:lastSaid()
    if(LS:left(1) == "!") {
        hideChat(1)
        
        local LSL = LS:length()
        local LS = LS:right(LSL-1)
        
        local InCase = 0
        switch(LS) {
            case "saidsClear",
                Q["lastSaids", array]:clear()
                InCase = 1
            break
        }
        
        if(!InCase) {
            Q["lastSaid", string] = LS
            Q["lastSaids", array] = Q["lastSaids", array]:add(array(LS))
            #print("commad #" + LS)
        }
    }
}




























































CursorDown = Q["cursorDown", string]
OPS = ops()
