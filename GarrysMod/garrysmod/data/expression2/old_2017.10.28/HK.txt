@name HK

@inputs [Pod]:entity
@outputs OPS HC Target:entity F1 F2 F3
@persist [E O User Base]:entity [Q]:table

@trigger none
@model models/bull/gates/processor.mdl


#include "AddHolo"
#include "effect_01_001"
if(changed(0)) {
    
    E = entity() E:setSkin(1)
    O = owner()
    
    Base = E:isWeldedTo()
    Base:setMass(600)
    
    addHolo(10)
    foreach(C, Ent:entity = E:getConstraints()) {
        local Model = Ent:model()
        if(Model == "models/mechanics/wheels/wheel_smooth_24f.mdl") {
            local LocalPos = Base:toLocal(Ent:pos())
            local N = 0
            if(LocalPos[1] < -50) {
                Q["thr3", entity] = Ent
                N = 3
            }
            elseif(LocalPos[2] > 0) {
                Q["thr1", entity] = Ent
                N = 1
            }
            elseif(LocalPos[2] < 0) {
                Q["thr2", entity] = Ent
                N = 2
            }
            
            Ent:setMass(35)
            Ent:effect01("flame" + N, vec(0,0,-6), 7, 50, ang(180,0,0), vec(255,50,0), 20)
        }
    }
    for(C = 1, 3) {
        local Thr = "thr" + C
        local Ent = Q[Thr, entity]
        #[
        holoCreate(C, vec(), vec(1.5,1.5,4), ang(), vec(255,0,0), "hq_cylinder")
        holoMaterial(C, "models/wireframe")
        holoAlpha(C, 50)
        holoClipEnabled(C, 1, 1)
        holoClip(C, 1, vec(0,0,0), vec(0,0,-1), 0)
        holoParent(C, Ent)
        holoPos(C, Ent:pos())
        holoAng(C, Ent:angles())
        ]#
        #Ent:soundPlay(Thr, 0, "ambient/levels/citadel/portal_beam_loop1.wav") soundPitch(Thr, 0) soundVolume(Thr, 0)
    }
    
    local W = Q["ammoContainer", entity]:wirelink()
    W["Active", number] = 1
    
    timer("user", 1)
    timer("engines", 1)
}

if(clk("user")) {
    
    if(changed(0)) {
        local CamHolo = holoCreate(0, Base:pos(), vec(), Base:angles()) holoParent(0, Base)
        cameraCreate(0, CamHolo:toWorld(vec(-170,0,50)), CamHolo:angles(), 0)
        cameraParent(0, CamHolo)
    }
    
    
    User = Pod:driver()
    timer("user", User ? 50 : 500)
    
    
    if(User) {
        local CamAng = angnorm(Pod:toLocal(User:eyeAngles()) - ang(0,90,0))
        
        holoAng(0, clamp(CamAng,-ang(70,999,0),ang(70,999,0)))
        
    }
    
    
    if(changed(User)) {
        cameraToggle(0, User | 0, Pod)
    }
}


if(clk("engines")) {
        timer("engines", 1)
    
    if(changed(0)) {
        
        HC = 1
        
        Q["lastCurtime", number] = curtime()
    }
    
    local LastCurtime = Q["lastCurtime", number]
    local Curtime = curtime()
    Q["lastCurtime", number] = Curtime
    
    local Interval = Curtime - LastCurtime
    local Loop = Interval / 0.015625
    
    local CamAng = angnorm(Pod:toLocal(User:eyeAngles())-ang(0,90,0))
    
    local Vel = Base:vel()
    local VelL = Base:velL()
    local VYC = VelL[2]
    
          VZC = Vel[3] #- NeedVel[3]
          HC   = clamp(HC + clamp( -VZC / 50 ,-1.5,1.5) ,0,8)
    local HF   = clamp(HC + clamp(-$VZC      ,-0.5,0.5) ,0,8)
    
    
    local R = Base:angles()
    local RV = Base:angVel()
    
    local RX = R[3]
    local RVX = RV[3]
    
    local RY = R[1]
    local NRX = clamp(VYC / 4,-65,65)
    local RVY = RV[1]
    local NRY = 0
    local RYC = -0.26 + clamp(sin(clamp(NRY-RY-clamp(RVY / 5 ,-90,90),-180,180)) ,-0.9,0.9)
    local RXC =         clamp(sin(clamp(NRX-RX-clamp(RVX / 5 ,-90,90),-180,180)) ,-0.9,0.9)
    
    local F = HF / 3 * 605
    F1 = Q["f1", number] = F * (1 - RYC * 1 + RXC)
    F2 = Q["f2", number] = F * (1 - RYC * 1 - RXC)
    F3 = Q["f3", number] = F * (1 + RYC * 2)
    
    local VXC = clamp(-VelL[1] / 2, -45,45)
    local RVZ = RV[2]
    if(User) {
        local RZ = R[2]
        local CamAngZ = CamAng[2]
        RVZ = RVZ + sin(RZ - CamAngZ) * 300
    }
    local A = sin(clamp(RVZ * 2,-90,90)) * 25
    Q["a1", number] = VXC + A
    Q["a2", number] = VXC - A
    Q["a3", number] = VXC
    
    
    
    
    
    
    for(C = 1,3) {
        local Thr = "thr" + C
        
        local T = Q[Thr, entity]
        local AngVel = T:angVel()
        local Ang = T:angles()
        
        local A = (Q["a" + C, number] - Ang - AngVel / 15) * 10
        T:applyAngForce(ang(A[1],0,0)*T:mass())
        
        local F = Q["f" + C, number]
        T:applyForce(T:up() * F * 9 * Loop)
        
        soundPitch(Thr, F)
        soundVolume(Thr, F)
        #holoScale(C, vec(1.5,1.5,max(F,0) / 80))
        effect01("flame" + C, F / 600)
    }
}





























































OPS = ops()
CPU = floor(cpuUsage() * 1000000)
