@name HK phoenix

@inputs [Base T1 T2 T3 Pod]:entity
@outputs HC F1 F2 F3
@persist [E O]:entity [Q]:table

@trigger none
@model models/bull/gates/processor.mdl



if(changed(0)) {
    
    runOnLast(1)
    E = entity() E:setSkin(1)
    O = owner()
    
    
    
    Q["HC", number] = 9
    timer("", 1)
}


if(clk("")) {
        timer("", 1)
    
    #####     User
    local User = Pod:driver()
    
    # cam
    local EYE = angnorm(Pod:toLocal(User:eyeAngles()) - ang(0,90,0))
    
    # keys
    local W_key = User:keyPressed("w")
    local A_key = User:keyPressed("a")
    local S_key = User:keyPressed("s")
    local D_key = User:keyPressed("d")
    local Space_key = User:keyPressed("space")
    local Shift_key = User:keyPressed("lshift")
    local Alt_key = User:keyPressed("lalt")
    
    
    #####     Camera
    if(changed(User)) {
        cameraToggle(1, User | 0, Pod)
    }
    if(User) {
        
        local CamRoot = Q["camRoot", entity]
        if(CamRoot) {
            
            holoAng(0, EYE)
        }
        else {
            CamRoot = Q["camRoot", entity] = holoCreate(0, Base:boxCenterW(), vec(), Base:angles())
            holoParent(0, Base)
            cameraCreate(1, CamRoot:toWorld(vec(-170,0,45)), CamRoot:toWorld(ang(0,0,0)))
            cameraParent(1, CamRoot)
            cameraToggle(1, User | 0, Pod)
        }
    }
    
    
    #####     Values
    local Ang    = Base:angles()
    local AngVel = Base:angVel()
    local Vel    = Base:vel()
    local VelL   = Base:velL()
    #
    #
    local Ang_p = Ang[1]
    local Ang_y = Ang[2]
    local Ang_r = Ang[3]
    
    local AngVel_p = AngVel[1]
    local AngVel_y = AngVel[2]
    local AngVel_r = AngVel[3]
    
    local Ang_dif = clamp(angnorm(Ang_y - EYE[2]),-90,90)
    local Ang_dif_cos = cos(Ang_dif)
    local Ang_dif_sin = sin(Ang_dif)
    local Ang_dif_cos = abs(Ang_dif_cos)^2*sign(Ang_dif_cos)
    local Ang_dif_sin = abs(Ang_dif_sin)^2*sign(Ang_dif_sin)
    local NeedVel = vec(W_key-S_key,A_key-D_key,Space_key-Alt_key) * vec(750,350,125) * (Shift_key ? 2 : 1)
    local NeedVel = vec(NeedVel[1]*Ang_dif_cos+NeedVel[2]*Ang_dif_sin,NeedVel[2]*Ang_dif_cos-NeedVel[1]*Ang_dif_sin,NeedVel[3])
    #
    #
          Vel_z = Vel[3] - NeedVel[3]
    
    local VelL_x = VelL[1] - NeedVel[1]
    local VelL_y = VelL[2] - NeedVel[2]
    
    
    
    #####     Control
    # height
          HC = Q["HC", number]
    local HC = Q["HC", number] = clamp(HC - clamp( Vel_z / 10 + $Vel_z * 5 ,-1.5,1.5)  ,0,30)
    local HF = clamp(HC - clamp(Vel_z / 1,-6,6) ,0,35)
    
    # velocity
    local VC_x = sin(clamp(VelL_x / 4,-90,90)) * 35
    local VC_y = sin(clamp(VelL_y / 4,-90,90)) * 55
    
    # rotation
    
    local NeedAng_y = 0
    if(User) {
        NeedAng_y = sin(Ang_dif) * 50
    }
    
    local D = max(cos(min(Vel:length() / 750 * 90,90)) ,0.5)
    
    local RC_x = 0.00 + sin(clamp(Ang_r - VC_y + AngVel_r / 3,-90,90)) * 0.5
    local RC_y = 0.52 + sin(clamp(Ang_p        + AngVel_p / 6,-90,90)) * 0.8
    local RC_z =            clamp(NeedAng_y    + AngVel_y / 4,-20 * D,20 * D)
    
    
    #####     forces
    #[
    local P1 = T1:angles()[1]
    local S1 = sin(P1)
    local C1 = cos(P1)
    local P2 = T2:angles()[1]
    local S2 = sin(P2)
    local C2 = cos(P2)
    ]#
    
    local F = HF * 360
    local F = F / 3
          F1 = F * (1 + RC_y * 0.5 - RC_x)
          F2 = F * (1 + RC_y * 0.5 + RC_x)
          F3 = F * (1 - RC_y * 1.0       )
    
    #####     angles
    local R = -VC_x
    local R1 = R + RC_z #* 0.6
    local R2 = R - RC_z #* 0.6
    local R3 = R
    
    
    
    #####     Apply
    for(C = 1, 3) {
        local T = select(C, T1, T2, T3)
        local F = select(C, F1, F2, F3)
        local R = select(C, R1, R2, R3)
        
        local A = (R - T:angles()) * 10 - T:angVel() * 0.8
        T:applyAngForce(ang(A[1] * T:mass(),0,0))
        
        T:applyForce(T:up() * F)
    }
    
    
    
    
    
    
    
    setName("HK phoenix\nOPS: " + ops() + "\nCPU: " + floor(cpuUsage() * 1e6) + "\n")
}














if(last()) {
    setName("HK phoenix")
}



























